dnl Process this file with autoconf to produce a configure script.

AC_INIT(configure.in)

AC_ENABLE_SHARED(yes)
AC_ENABLE_STATIC(no)

AM_INIT_AUTOMAKE(liferea, 0.5.1)
AM_CONFIG_HEADER(config.h)
AM_MAINTAINER_MODE

dnl Work around libtool bug (fixed in the version 1.5a?)
AC_DEFUN([AC_PROVIDE_AC_LIBTOOL_DLOPEN], )
AC_LIBTOOL_DLOPEN
AM_PROG_LIBTOOL

AC_ISC_POSIX
AC_PROG_CC
AM_PROG_CC_STDC
AC_HEADER_STDC
AC_PROG_INSTALL
AC_PROG_LN_S
AC_PROG_MAKE_SET

dnl libcurl support
AC_MSG_CHECKING([libcurl])
dnl if curl-config --libs > /dev/null 2>&1; then
if false ; then
	AC_MSG_RESULT(yes)
	AM_CONDITIONAL(USE_LIBCURL, true)
	CURL_CFLAGS="`curl-config --cflags`"
	CURL_LIBS="`curl-config --libs`"
	enable_libcurl=yes
else
	enable_libcurl=no
	AC_MSG_RESULT(no)
	AM_CONDITIONAL(USE_LIBCURL, false)
fi

AC_SUBST(CURL_CFLAGS)
AC_SUBST(CURL_LIBS)


html_modules=

AC_MSG_CHECKING([for GtkHTML2 support])
gtkhtml2=`pkg-config --cflags libgtkhtml-2.0 2> /dev/null`
AM_CONDITIONAL(WITH_GTKHTML2, test "x$gtkhtml2" != "x")
if test "x$gtkhtml2" != "x" ; then
   AC_MSG_RESULT(yes)
   PKG_CHECK_MODULES(GTKHTML2, libgtkhtml-2.0 >= 2.0.0 gnome-vfs-2.0 >= 2.0.0)
   AC_SUBST(GTKHTML2_CFLAGS)
   AC_SUBST(GTKHTML2_LIBS)
   enable_gtkhtml2=yes
else
   AC_MSG_RESULT(no)
   enable_gtkhtml2=no
fi

AC_MSG_CHECKING([for Mozilla support])
mozilla=`pkg-config --cflags mozilla-gtkmozembed 2> /dev/null`
AM_CONDITIONAL(WITH_MOZILLA, test "x$mozilla" != "x")
if test "x$mozilla" != "x" ; then

   dnl the Mozilla XPCOM access means C++
   AC_PROG_CXX

   AC_MSG_RESULT(yes)
   PKG_CHECK_MODULES(MOZILLA, mozilla-gtkmozembed)
   
   dnl Note: with the infos from mozilla-gtkmozembed.pc
   dnl we got all includes and libraries for the C interface
   dnl to Mozilla, but not the XPCOM headers we also need.
   dnl Galeon's configure.in uses several hundred lines 
   dnl of macros to come around this. Which I would like to
   dnl avoid. So this might be not very portable...
   
   MOZILLA_INCLUDE_ROOT=`pkg-config --cflags-only-I mozilla-gtkmozembed | awk '{print $1}' | sed "s/^-I//"`
   MOZILLA_INCLUDE_ROOT=`dirname $MOZILLA_INCLUDE_ROOT`
   
   dnl Maybe we don't need all of this...
   MOZILLA_CFLAGS="$MOZILLA_CFLAGS \
-I$MOZILLA_INCLUDE_ROOT \
-I$MOZILLA_INCLUDE_ROOT/appcomps \
-I$MOZILLA_INCLUDE_ROOT/caps \
-I$MOZILLA_INCLUDE_ROOT/content \
-I$MOZILLA_INCLUDE_ROOT/cookie \
-I$MOZILLA_INCLUDE_ROOT/docshell \
-I$MOZILLA_INCLUDE_ROOT/dom \
-I$MOZILLA_INCLUDE_ROOT/exthandler \
-I$MOZILLA_INCLUDE_ROOT/find \
-I$MOZILLA_INCLUDE_ROOT/gfx \
-I$MOZILLA_INCLUDE_ROOT/gtkembedmoz \
-I$MOZILLA_INCLUDE_ROOT/helperAppDlg \
-I$MOZILLA_INCLUDE_ROOT/history \
-I$MOZILLA_INCLUDE_ROOT/java \
-I$MOZILLA_INCLUDE_ROOT/js \
-I$MOZILLA_INCLUDE_ROOT/jsconsole \
-I$MOZILLA_INCLUDE_ROOT/layout \
-I$MOZILLA_INCLUDE_ROOT/mimetype \
-I$MOZILLA_INCLUDE_ROOT/mozxfer \
-I$MOZILLA_INCLUDE_ROOT/necko \
-I$MOZILLA_INCLUDE_ROOT/necko2 \
-I$MOZILLA_INCLUDE_ROOT/nkcache \
-I$MOZILLA_INCLUDE_ROOT/oji \
-I$MOZILLA_INCLUDE_ROOT/pref \
-I$MOZILLA_INCLUDE_ROOT/progressDlg \
-I$MOZILLA_INCLUDE_ROOT/sidebar \
-I$MOZILLA_INCLUDE_ROOT/string \
-I$MOZILLA_INCLUDE_ROOT/shistory \
-I$MOZILLA_INCLUDE_ROOT/typeaheadfind \
-I$MOZILLA_INCLUDE_ROOT/uconv \
-I$MOZILLA_INCLUDE_ROOT/uriloader \
-I$MOZILLA_INCLUDE_ROOT/wallet \
-I$MOZILLA_INCLUDE_ROOT/webbrowserpersist \
-I$MOZILLA_INCLUDE_ROOT/webbrwsr \
-I$MOZILLA_INCLUDE_ROOT/webshell \
-I$MOZILLA_INCLUDE_ROOT/widget \
-I$MOZILLA_INCLUDE_ROOT/windowwatcher \
-I$MOZILLA_INCLUDE_ROOT/xpcom \
-I$MOZILLA_INCLUDE_ROOT/xpconnect"

   AC_SUBST(MOZILLA_CFLAGS)
   AC_SUBST(MOZILLA_LIBS)   
   enable_mozilla=yes
else
   AC_MSG_RESULT(no)
   $enable_mozilla=no
fi

dnl For now, require GtkHTML2 or Mozilla. GtkHTML3 should not be used!
if test "x$mozilla" = "x" -a "x$gtkhtml2" = "x" ; then
	AC_MSG_ERROR([
*** You must have either the GtkHTML2 or the Mozilla development
*** libraries installed in order to build Liferea!
])
fi

dnl hmm... I really have no clue which versions are neccessary!
pkg_modules="	gtk+-2.0 >= 2.0.0 
		gconf-2.0 >= 2.0.0 
		libxml-2.0 >= 2.0.0 
		gmodule-2.0 >= 2.0.0"

PKG_CHECK_MODULES(PACKAGE, [$pkg_modules])
PACKAGE_CFLAGS="-Wall $PACKAGE_CFLAGS"
AC_SUBST(PACKAGE_CFLAGS)
AC_SUBST(PACKAGE_LIBS)

GETTEXT_PACKAGE=liferea
AC_SUBST(GETTEXT_PACKAGE)
AC_DEFINE_UNQUOTED(GETTEXT_PACKAGE,"$GETTEXT_PACKAGE")

uname=`uname`
AC_DEFINE_UNQUOTED(OS, $uname, [defines a OS version string, used for OS specific code])
AC_DEFINE_UNQUOTED(OSNAME, "$uname", [defines a OS version string, used for the user agent string])
AC_MSG_RESULT(user agent OS = $uname)

dnl Add the languages which your application supports here.
ALL_LINGUAS="bg cs de es fr it ja ko mk ru sk zh_TW"
AM_GLIB_GNU_GETTEXT

AC_OUTPUT([
Makefile
src/Makefile
src/mozilla/Makefile
src/gtkhtml2/Makefile
src/net/Makefile
pixmaps/Makefile
po/Makefile.in
liferea.spec
liferea-SuSE.spec
])

echo
echo $PACKAGE $VERSION
echo
echo Build Mozilla Plugin............ : $enable_mozilla
echo Build GtkHTML Plugin............ : $enable_gtkhtml2
echo 
echo Use libcurl download library.... : $enable_libcurl
echo
